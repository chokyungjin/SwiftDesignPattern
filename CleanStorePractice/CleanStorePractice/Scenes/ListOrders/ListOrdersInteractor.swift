//
//  ListOrdersInteractor.swift
//  CleanStorePractice
//
//  Created by 조경진 on 2020/02/18.
//  Copyright (c) 2020 조경진. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
// 데이터 처리, 네트워크 처리 등을 담당하는 Business Logic
protocol ListOrdersBusinessLogic
{
  func fetchOrders(request: ListOrders.FetchOrders.Request)
}
// 이런식으로 protocol을 선언하면 프로토콜을 상속하는 클래스는 해당하는 변수를 무조건 선언해줘야함 , 이름도 같아야함!
protocol ListOrdersDataStore
{
  var orders: [Order]? { get }
}

class ListOrdersInteractor: ListOrdersBusinessLogic, ListOrdersDataStore
{
  var presenter: ListOrdersPresentationLogic?
  //Workers를 통해 데이터 전달!
  var ordersWorker = OrdersWorker(ordersStore: OrdersMemStore())
  var orders: [Order]? //protocol 만족
  
  // MARK: - Fetch orders
  
  func fetchOrders(request: ListOrders.FetchOrders.Request)
  {
    ordersWorker.fetchOrders { (orders) -> Void in
      self.orders = orders
      let response = ListOrders.FetchOrders.Response(orders: orders)
      self.presenter?.presentFetchedOrders(response: response)
    }
  }
}
